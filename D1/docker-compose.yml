version: '3.8'

networks:
  frontend-net:
    driver: bridge
  backend-net:
    driver: bridge
  data-net:
    driver: bridge

volumes:
  nginx_conf:
  nginx_certs:
  glpi_data:
  mysql_data:
  es_data:
  grafana_data:
  cassandra_data:
  prometheus_data:

services:

  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./configs/nginx.crt:/etc/nginx/certs/nginx.crt
      - ./configs/nginx.key:/etc/nginx/certs/nginx.key
    networks:
      - frontend-net
      - backend-net
    depends_on:
      - glpi
      - grafana
      - elasticsearch
    restart: unless-stopped

  # GLPI Service
  glpi:
    image: diouxx/glpi:latest
    container_name: glpi
    environment:
      - DB_HOST=mysql
      - DB_USER=glpiuser
      - DB_PASSWORD=glpipassword
      - DB_NAME=glpidb
    volumes:
      - glpi_data:/var/www/html/glpi
    networks:
      - backend-net
    depends_on:
      - mysql
    restart: unless-stopped

  # MySQL for GLPI
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=glpidb
      - MYSQL_USER=glpiuser
      - MYSQL_PASSWORD=glpipassword
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend-net
    restart: unless-stopped

  # Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - backend-net
      - data-net
    restart: unless-stopped

  # Grafana Service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - backend-net
    depends_on:
      - elasticsearch
      - prometheus
    restart: unless-stopped

  # Cassandra Service
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    volumes:
      - cassandra_data:/var/lib/cassandra
    networks:
      - backend-net
      - data-net
    restart: unless-stopped

  # Prometheus Service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    networks:
      - backend-net
    restart: unless-stopped



  # cAdvisor for Docker container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - backend-net
    restart: unless-stopped

  # Node Exporter for host metrics
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: --path.procfs=/host/proc --path.sysfs=/host/sys --collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"
    ports:
      - "9100:9100"
    networks:
      - backend-net
    restart: unless-stopped

